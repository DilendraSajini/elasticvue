name: Test build

on:
  workflow_dispatch:
  push:
    branches:
      - develop

jobs:
  build_desktop:
    name: Build desktop app for ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ macos-latest, ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.platform }}
    env:
      TAURI_PRIVATE_KEY: "${{ secrets.TAURI_PRIVATE_KEY }}"
      TAURI_KEY_PASSWORD: "${{ secrets.TAURI_KEY_PASSWORD }}"
      APPLE_CERTIFICATE: "${{ secrets.APPLE_CERTIFICATE }}"
      APPLE_CERTIFICATE_PASSWORD: "${{ secrets.APPLE_CERTIFICATE_PASSWORD }}"
      APPLE_SIGNING_IDENTITY: "${{ secrets.APPLE_SIGNING_IDENTITY }}"
      APPLE_ID: "${{ secrets.APPLE_ID }}"
      APPLE_PASSWORD: "${{ secrets.APPLE_PASSWORD }}"
      APPLE_TEAM_ID: "${{ secrets.APPLE_TEAM_ID }}"

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version: 18

      - run: rustup toolchain install stable

      - run: rustup target add aarch64-apple-darwin
        if: matrix.platform == 'macos-latest'

      - name: (linux) install dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 librsvg2-dev patchelf

      - name: install app dependencies
        run: yarn

      - name: build apple-silicon app
        if: matrix.platform == 'macos-latest'
        run: yarn tauri:build --target aarch64-apple-darwin

      - name: (mac arm) upload .dmg
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          path: src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/elasticvue_*_aarch64.dmg

      - run: yarn tauri:build

      - name: (mac) upload .dmg
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          path: src-tauri/target/release/bundle/dmg/elasticvue_*_x64.dmg

      - name: (linux) upload .deb
        if: matrix.platform == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          path: src-tauri/target/release/bundle/deb/elasticvue_*_amd64.deb

      - name: (linux) upload .appimage
        if: matrix.platform == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          path: src-tauri/target/release/bundle/appimage/elasticvue_*_amd64.*

      - name: (linux) upload binary
        id: linux_upload_binary
        if: matrix.platform == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          path: src-tauri/target/release/elasticvue

      - name: (windows) upload .msi
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          path: src-tauri/target/release/bundle/msi/elasticvue_*_x64*

      - name: (windows) upload .exe
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          path: src-tauri/target/release/elasticvue.exe
